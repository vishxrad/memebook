{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\memebook\\\\src\\\\components\\\\Popper\\\\Menu\\\\Menu.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport Tippy from '@tippyjs/react/headless';\nimport { Wrapper as PopperWrapper } from \"./..\";\nimport MenuItem from \"./MenuItem\";\nimport Header from \"./Header\";\nimport styles from \"./Menu.module.scss\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(styles);\n\nconst defaultFn = () => {};\n\nfunction Menu(_ref) {\n  _s();\n\n  let {\n    children,\n    items = [],\n    hideOnClick = false,\n    onChange = defaultFn\n  } = _ref;\n  const [history, setHistory] = useState([{\n    data: items\n  }]);\n  const current = history[history.length - 1];\n\n  const renderItems = () => {\n    return current.data.map((item, index) => {\n      const isParent = !!item.children;\n      return /*#__PURE__*/_jsxDEV(MenuItem, {\n        data: item,\n        onClick: () => {\n          if (isParent) {\n            setHistory(prev => [...prev, item.children]);\n          } else {\n            onChange(item);\n          }\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  const handleBack = () => {\n    setHistory(prev => prev.slice(0, prev.length - 1));\n  };\n\n  const renderResult = attrs => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx('menu-list'),\n    tabIndex: \"-1\",\n    ...attrs,\n    children: /*#__PURE__*/_jsxDEV(PopperWrapper, {\n      className: cx('menu-popper'),\n      children: [history.length > 1 && /*#__PURE__*/_jsxDEV(Header, {\n        title: current.title,\n        onBack: handleBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx('menu-body'),\n        children: renderItems()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this); // Reset to first page\n\n\n  const handleReset = () => {\n    setHistory(prev => prev.slice(0, 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tippy, {\n    interactive: true,\n    delay: [0, 700],\n    offset: [12, 8],\n    hideOnClick: hideOnClick,\n    placement: \"bottom-end\",\n    render: renderResult,\n    onHide: handleReset,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Menu, \"UE7DUDARgifM2bLzDAh71r6Z/DY=\");\n\n_c = Menu;\nMenu.propTypes = {\n  children: PropTypes.node.isRequired,\n  items: PropTypes.array,\n  hideOnClick: PropTypes.bool,\n  onChange: PropTypes.func\n};\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/Users/HP/memebook/src/components/Popper/Menu/Menu.js"],"names":["PropTypes","classNames","Tippy","Wrapper","PopperWrapper","MenuItem","Header","styles","useState","cx","bind","defaultFn","Menu","children","items","hideOnClick","onChange","history","setHistory","data","current","length","renderItems","map","item","index","isParent","prev","handleBack","slice","renderResult","attrs","title","handleReset","propTypes","node","isRequired","array","bool","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport classNames from 'classnames/bind';\r\nimport Tippy from '@tippyjs/react/headless';\r\n\r\nimport { Wrapper as PopperWrapper } from '~/components/Popper';\r\nimport MenuItem from './MenuItem';\r\nimport Header from './Header';\r\nimport styles from './Menu.module.scss';\r\nimport { useState } from 'react';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst defaultFn = () => {};\r\n\r\nfunction Menu({ children, items = [], hideOnClick = false, onChange = defaultFn }) {\r\n    const [history, setHistory] = useState([{ data: items }]);\r\n    const current = history[history.length - 1];\r\n\r\n    const renderItems = () => {\r\n        return current.data.map((item, index) => {\r\n            const isParent = !!item.children;\r\n\r\n            return (\r\n                <MenuItem\r\n                    key={index}\r\n                    data={item}\r\n                    onClick={() => {\r\n                        if (isParent) {\r\n                            setHistory((prev) => [...prev, item.children]);\r\n                        } else {\r\n                            onChange(item);\r\n                        }\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setHistory((prev) => prev.slice(0, prev.length - 1));\r\n    };\r\n\r\n    const renderResult = (attrs) => (\r\n        <div className={cx('menu-list')} tabIndex=\"-1\" {...attrs}>\r\n            <PopperWrapper className={cx('menu-popper')}>\r\n                {history.length > 1 && <Header title={current.title} onBack={handleBack} />}\r\n                <div className={cx('menu-body')}>{renderItems()}</div>\r\n            </PopperWrapper>\r\n        </div>\r\n    );\r\n\r\n    // Reset to first page\r\n    const handleReset = () => {\r\n        setHistory((prev) => prev.slice(0, 1));\r\n    };\r\n\r\n    return (\r\n        <Tippy\r\n            interactive\r\n            delay={[0, 700]}\r\n            offset={[12, 8]}\r\n            hideOnClick={hideOnClick}\r\n            placement=\"bottom-end\"\r\n            render={renderResult}\r\n            onHide={handleReset}\r\n        >\r\n            {children}\r\n        </Tippy>\r\n    );\r\n}\r\n\r\nMenu.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    items: PropTypes.array,\r\n    hideOnClick: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default Menu;\r\n"]},"metadata":{},"sourceType":"module"}