{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kashy\\\\OneDrive\\\\Desktop\\\\memebook\\\\src\\\\layouts\\\\components\\\\Search\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\nimport { faCircleXmark, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport HeadlessTippy from '@tippyjs/react/headless';\nimport classNames from 'classnames/bind';\nimport * as searchServices from \"../../../services/searchService\";\nimport { Wrapper as PopperWrapper } from \"../../../components/Popper\";\nimport AccountItem from \"../../../components/AccountItem\";\nimport { SearchIcon } from \"../../../components/Icons\";\nimport { useDebounce } from \"../../../hooks\";\nimport styles from \"./Search.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(styles);\n\nfunction Search() {\n  _s();\n\n  const [searchValue, setSearchValue] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const debouncedValue = useDebounce(searchValue, 500);\n  const inputRef = useRef();\n  useEffect(() => {\n    if (!debouncedValue.trim()) {\n      setSearchResult([]);\n      return;\n    }\n\n    const fetchApi = async () => {\n      setLoading(true);\n      const result = await searchServices.search(debouncedValue);\n      setSearchResult(result);\n      setLoading(false);\n    };\n\n    fetchApi();\n  }, [debouncedValue]);\n\n  const handleClear = () => {\n    setSearchValue('');\n    setSearchResult([]);\n    inputRef.current.focus();\n  };\n\n  const handleHideResult = () => {\n    setShowResult(false);\n  };\n\n  const handleChange = e => {\n    const searchValue = e.target.value;\n\n    if (!searchValue.startsWith(' ')) {\n      setSearchValue(searchValue);\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // Using a wrapper <div> tag around the reference element solves\n    // this by creating a new parentNode context.\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(HeadlessTippy, {\n        interactive: true,\n        visible: showResult && searchResult.length > 0,\n        render: attrs => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cx('search-result'),\n          tabIndex: \"-1\",\n          ...attrs,\n          children: /*#__PURE__*/_jsxDEV(PopperWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: cx('search-title'),\n              children: \"Accounts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), searchResult.map(result => /*#__PURE__*/_jsxDEV(AccountItem, {\n              data: result\n            }, result.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this),\n        onClickOutside: handleHideResult,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cx('search'),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputRef,\n            value: searchValue,\n            placeholder: \"Search accounts and videos\",\n            spellCheck: false,\n            onChange: handleChange,\n            onFocus: () => setShowResult(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), !!searchValue && !loading && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: cx('clear'),\n            onClick: handleClear,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCircleXmark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), loading && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: cx('loading'),\n            icon: faSpinner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: cx('search-btn'),\n            onMouseDown: e => e.preventDefault(),\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Search, \"qVx2BC+dEe2xBHyP2nEcfKte61U=\", false, function () {\n  return [useDebounce];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/kashy/OneDrive/Desktop/memebook/src/layouts/components/Search/Search.js"],"names":["useEffect","useState","useRef","faCircleXmark","faSpinner","FontAwesomeIcon","HeadlessTippy","classNames","searchServices","Wrapper","PopperWrapper","AccountItem","SearchIcon","useDebounce","styles","cx","bind","Search","searchValue","setSearchValue","searchResult","setSearchResult","showResult","setShowResult","loading","setLoading","debouncedValue","inputRef","trim","fetchApi","result","search","handleClear","current","focus","handleHideResult","handleChange","e","target","value","startsWith","length","attrs","map","id","preventDefault"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from 'react';\r\nimport { faCircleXmark, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport HeadlessTippy from '@tippyjs/react/headless';\r\nimport classNames from 'classnames/bind';\r\n\r\nimport * as searchServices from '~/services/searchService';\r\nimport { Wrapper as PopperWrapper } from '~/components/Popper';\r\nimport AccountItem from '~/components/AccountItem';\r\nimport { SearchIcon } from '~/components/Icons';\r\nimport { useDebounce } from '~/hooks';\r\nimport styles from './Search.module.scss';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction Search() {\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [searchResult, setSearchResult] = useState([]);\r\n    const [showResult, setShowResult] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const debouncedValue = useDebounce(searchValue, 500);\r\n\r\n    const inputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (!debouncedValue.trim()) {\r\n            setSearchResult([]);\r\n            return;\r\n        }\r\n\r\n        const fetchApi = async () => {\r\n            setLoading(true);\r\n\r\n            const result = await searchServices.search(debouncedValue);\r\n\r\n            setSearchResult(result);\r\n            setLoading(false);\r\n        };\r\n\r\n        fetchApi();\r\n    }, [debouncedValue]);\r\n\r\n    const handleClear = () => {\r\n        setSearchValue('');\r\n        setSearchResult([]);\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    const handleHideResult = () => {\r\n        setShowResult(false);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const searchValue = e.target.value;\r\n        if (!searchValue.startsWith(' ')) {\r\n            setSearchValue(searchValue);\r\n        }\r\n    };\r\n\r\n    return (\r\n        // Using a wrapper <div> tag around the reference element solves\r\n        // this by creating a new parentNode context.\r\n        <div>\r\n            <HeadlessTippy\r\n                interactive\r\n                visible={showResult && searchResult.length > 0}\r\n                render={(attrs) => (\r\n                    <div className={cx('search-result')} tabIndex=\"-1\" {...attrs}>\r\n                        <PopperWrapper>\r\n                            <h4 className={cx('search-title')}>Accounts</h4>\r\n                            {searchResult.map((result) => (\r\n                                <AccountItem key={result.id} data={result} />\r\n                            ))}\r\n                        </PopperWrapper>\r\n                    </div>\r\n                )}\r\n                onClickOutside={handleHideResult}\r\n            >\r\n                <div className={cx('search')}>\r\n                    <input\r\n                        ref={inputRef}\r\n                        value={searchValue}\r\n                        placeholder=\"Search accounts and videos\"\r\n                        spellCheck={false}\r\n                        onChange={handleChange}\r\n                        onFocus={() => setShowResult(true)}\r\n                    />\r\n                    {!!searchValue && !loading && (\r\n                        <button className={cx('clear')} onClick={handleClear}>\r\n                            <FontAwesomeIcon icon={faCircleXmark} />\r\n                        </button>\r\n                    )}\r\n                    {loading && <FontAwesomeIcon className={cx('loading')} icon={faSpinner} />}\r\n\r\n                    <button className={cx('search-btn')} onMouseDown={(e) => e.preventDefault()}>\r\n                        <SearchIcon />\r\n                    </button>\r\n                </div>\r\n            </HeadlessTippy>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}